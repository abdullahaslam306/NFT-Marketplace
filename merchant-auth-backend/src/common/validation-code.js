module.exports = {
  merchant_info: {
    email: {
      'any.required': 'Provide a valid username.',
      'string.base': 'Provide a valid username.',
      'string.email': 'Provide a valid username.',
      'any.empty': 'Provided username is empty.',
      'string.empty': 'Provided username is empty.',
      'string.pattern.base': 'Provide a valid username.',
      'string.regex.base': 'Provided username contains invalid character(s)/pattern.',
    },
    password: {
      'any.empty': 'Provided password is empty.',
      'any.required': 'Provide a valid password.',
      'string.base': 'Provide a valid password.',
      'string.base64': 'Provide a valid password.',
      'string.empty': 'Provided password is empty.',
      'string.min': 'Your password does not meet with the security standard. ',
      'string.pattern.base': 'Your password does not meet with the security standard. ',
      'string.regex.base': 'Provided password contains invalid character(s)/pattern.',
    },
    phoneNumber: {
      'any.required': 'Provide a valid phone number.',
      'string.base': 'Provide a valid phone number.',
      'string.empty': 'Provided phone number is empty.',
      'any.empty': 'Provided phone number is empty.',
      'string.pattern.base': 'Provide a valid phone number.',
      'string.regex.base': 'Provided phone number contains invalid character(s)/pattern.',
    },
    code: {
      'string.base': 'Provide a valid code.',
      'any.empty': 'Provided code is empty.',
      'string.empty': 'Provided code is empty.',
      'any.required': 'Provided code is invalid.',
      'string.pattern.base': 'Provided code is invalid.',
      'string.regex.base': 'Provided code contains invalid character(s)/pattern.',
    },
  },
  verify_update_phone: {
    transactionUid: {
      'any.empty': 'Provided transactional ID is empty.',
      'string.base': 'Provide a valid transactional ID.',
      'any.required': 'Provided transactional ID is invalid.',
      'string.empty': 'Provided transactional ID is invalid.',
      'string.guid': 'Provided transactional ID is invalid.',
    },
    emailCode: {
      'any.empty': 'Provided OTP code is empty.',
      'string.base': 'Provide a valid OTP code.',
      'string.empty': 'Provided OTP code is empty.',
      'any.required': 'Provided OTP code is invalid.',
      'string.pattern.base': 'Provided OTP code is invalid.',
      'string.regex.base': 'Provided OTP code contains invalid character(s)/pattern.',
    },
    phoneCode: {
      'string.base': 'Provide a valid code.',
      'any.empty': 'Provided OTP code is empty.',
      'string.empty': 'Provided OTP code is empty.',
      'any.required': 'Provided OTP code is invalid.',
      'string.pattern.base': 'Provided OTP code is invalid.',
      'string.regex.base': 'Provided OTP code contains invalid character(s)/pattern.',
    },
    phone: {
      'any.empty': 'Provided phone number is empty.',
      'string.base': 'Provide a valid phone number.',
      'any.required': 'Provide a valid phone number.',
      'string.empty': 'Provided phone number is empty.',
      'string.pattern.base': 'Provide a valid phone number.',
      'string.regex.base': 'Provided phone number contains invalid character(s)/pattern.',
    },
  },
  merchant_auth: {
    action: {
      'any.only': 'Provided action to initialize MFA is invalid.',
      'any.empty': 'Provided action to initialize MFA is invalid.',
      'string.base': 'Provided action to initialize MFA is invalid.',
      'any.required': 'Provided action to initialize MFA.',
      'string.email': 'Provided action to initialize MFA invalid.',
      'string.empty': 'Provided action to initialize MFA is invalid.',
    },
    channel: {
      'any.only': 'Provided channel to initialize MFA is invalid.',
      'any.empty': 'Provided channel to initialize MFA is invalid.',
      'string.base': 'Provided channel to initialize MFA is invalid.',
      'any.required': 'Provided channel to initialize MFA.',
      'string.email': 'Provided channel to initialize MFA invalid.',
      'string.empty': 'Provided channel to initialize MFA is invalid.',
    },
    phone: {
      'any.empty': 'Provided phone to initialize MFA is missing.',
      'any.unknown': 'Provided phone to initialize MFA is invalid.',
      'string.base': 'Provided phone to initialize MFA is invalid.',
      'string.empty': 'Provided phone to initialize MFA is invalid.',
      'any.required': 'Provided phone to initialize MFA is required.',
      'string.pattern.base': 'Provided phone to initialize MFA is invalid.',
    },
    email: {
      'any.empty': 'Provided email to initialize MFA is missing.',
      'any.unknown': 'Provided email to initialize MFA is invalid.',
      'string.base': 'Provided email to initialize MFA is invalid.',
      'string.email': 'Provided email to initialize MFA is invalid.',
      'string.empty': 'Provided email to initialize MFA is invalid.',
      'any.required': 'Provided email to initialize MFA is required.',
    },
  },
  authorization: {
    action: {
      'any.required': 'Provided action is invalid.',
      'string.base': 'Provide a valid action type.',
      'string.empty': 'Provided action is empty.',
      'any.empty': 'Provided action is empty.',
      'string.pattern.base': 'Provided action is invalid.',
      'any.only': 'Provided action is invalid.',
      'string.regex.base': 'Provided action contains invalid character(s)/pattern.',
    },
    assetUid: {
      'any.required': 'Asset identifier not provided.',
      'any.empty': 'Provided asset identifier is empty.',
      'string.base': 'Provide a valid asset identifier.',
      'string.empty': 'Provided asset identifier is empty.',
      'any.unknown': 'Asset identifier is forbidden.',
      'string.guid': 'Provided asset identifier is invalid.',
    },
  },
  profile: {
    username: {
      'any.required': 'Provide a valid username.',
      'string.min': 'Provide a valid username.',
      'string.max': 'Provide a valid username.',
      'string.base': 'Provide a valid username.',
      'string.email': 'Provide a valid username.',
      'any.empty': 'Provided username is empty.',
      'string.empty': 'Provided username is empty.',
      'string.pattern.base': 'Provide a valid username.',
      'string.regex.base': 'Provided username contains invalid character(s)/pattern.',
    },
    bio: {
      'string.max': 'Provide a valid bio.',
      'string.base': 'Provide a valid bio.',
      'any.empty': 'Provided bio is empty.',
      'string.empty': 'Provided bio is empty.',
    },
    picture: {
      'string.max': 'Provide a valid picture path.',
      'string.base': 'Provide a valid picture path.',
      'any.empty': 'Provided picture path is empty.',
      'string.empty': 'Provided picture path is empty.',
    },
    facebook: {
      'string.max': 'Provide a valid facebook link.',
      'string.base': 'Provide a valid facebook link.',
      'any.empty': 'Provided facebook link is empty.',
      'string.empty': 'Provided facebook link is empty.',
    },
    instagram: {
      'string.min': 'Provide a valid instagram username.',
      'string.max': 'Provide a valid instagram username.',
      'string.base': 'Provide a valid instagram username.',
      'any.empty': 'Provided instagram username is empty.',
      'string.empty': 'Provided instagram username is empty.',
      'string.pattern.base': 'Provide a valid instagram username.',
      'string.regex.base': 'Provided instagram username contains invalid character(s)/pattern.',
    },
    twitter: {
      'string.min': 'Provide a valid twitter username.',
      'string.max': 'Provide a valid twitter username.',
      'string.base': 'Provide a valid twitter username.',
      'any.empty': 'Provided twitter username is empty.',
      'string.empty': 'Provided twitter username is empty.',
      'string.pattern.base': 'Provide a valid twitter username.',
      'string.regex.base': 'Provided twitter username contains invalid character(s)/pattern.',
    },
    firstName: {
      'string.min': 'Provide a valid first name.',
      'string.max': 'Provide a valid first name.',
      'string.base': 'Provide a valid first name.',
      'any.empty': 'Provided first name is empty.',
      'string.empty': 'Provided first name is empty.',
      'string.pattern.base': 'Provide a valid first name.',
      'string.regex.base': 'Provided first name contains invalid character(s)/pattern.',
    },
    lastName: {
      'string.min': 'Provide a valid last name.',
      'string.max': 'Provide a valid last name.',
      'string.base': 'Provide a valid last name.',
      'any.empty': 'Provided last name is empty.',
      'string.empty': 'Provided last name is empty.',
      'string.pattern.base': 'Provide a valid last name.',
      'string.regex.base': 'Provided last name contains invalid character(s)/pattern.',
    },
    defaultLanguage: {
      'string.base': 'Provide a valid language.',
      'any.empty': 'Provided language is empty.',
      'string.empty': 'Provided language is empty.',
      'any.only': 'Provided language is not supported.',
    },
    country: {
      'string.base': 'Provide a valid country.',
      'any.empty': 'Provided country is empty.',
      'string.empty': 'Provided country is empty.',
      'any.only': 'Provided country is not supported.',
    },
    defaultCurrency: {
      'string.base': 'Provide a valid currency.',
      'any.empty': 'Provided currency is empty.',
      'string.empty': 'Provided currency is empty.',
      'any.only': 'Provided currency is not supported.',
    },
    state: {
      'string.min': 'Provide a valid state.',
      'string.base': 'Provide a valid state.',
      'any.empty': 'Provided state is empty.',
      'string.empty': 'Provided state is empty.',
    },
    city: {
      'string.max': 'Provide a valid city.',
      'string.base': 'Provide a valid city.',
      'any.empty': 'Provided city is empty.',
      'string.empty': 'Provided city is empty.',
    },
    address: {
      'string.max': 'Provide a valid address.',
      'string.min': 'Provide a valid address.',
      'string.base': 'Provide a valid address.',
      'any.empty': 'Provided address is empty.',
      'string.empty': 'Provided address is empty.',
    },
    zip: {
      'string.max': 'Provide a valid zip code.',
      'string.base': 'Provide a valid zip code.',
      'any.empty': 'Provided zip code is empty.',
      'string.empty': 'Provided zip code is empty.',
    },
  },
  verify_update: {
    transactionUid: {
      'any.empty': 'Provided transactional ID is empty.',
      'any.required': 'Provided transactional ID is invalid.',
      'string.base': 'Provide a valid transactional ID.',
      'string.empty': 'Provided transactional ID is invalid.',
      'string.guid': 'Provided transactional ID is invalid.',
    },
    emailCode: {
      'string.base': 'Provide a valid OTP code.',
      'any.empty': 'Provided OTP code is empty.',
      'string.empty': 'Provided OTP code is empty.',
      'any.required': 'Provided OTP code is invalid.',
      'string.pattern.base': 'Provided OTP code is invalid.',
      'string.regex.base': 'Provided OTP code contains invalid character(s)/pattern.',
    },
    phoneCode: {
      'any.required': 'Provided OTP code is invalid.',
      'string.base': 'Provide a valid code.',
      'string.empty': 'Provided OTP code is empty.',
      'any.empty': 'Provided OTP code is empty.',
      'string.pattern.base': 'Provided OTP code is invalid.',
      'string.regex.base': 'Provided OTP code contains invalid character(s)/pattern.',
    },
    phone: {
      'any.required': 'Provide a valid phone number.',
      'string.base': 'Provide a valid phone number.',
      'string.empty': 'Provided phone number is empty.',
      'any.empty': 'Provided phone number is empty.',
      'string.pattern.base': 'Provide a valid phone number.',
      'string.regex.base': 'Provided phone number contains invalid character(s)/pattern.',
    },
    version: {
      'any.empty': 'Provided version id is empty.',
      'any.required': 'Version id is not provided.',
      'string.base': 'Provide a valid version id.',
      'string.empty': 'Provided version id is invalid.',
      'string.guid': 'Provided version id is invalid.',
    },
  },
  generic: {
    none: {
      'any.*': 'Provide valid request data.',
    },
  },
};
